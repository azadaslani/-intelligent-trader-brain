
import pandas as pd
import numpy as np
import joblib
from tensorflow.keras.models import load_model
from sklearn.preprocessing import MinMaxScaler

# Ø¨Ø§Ø±Ú¯Ø°Ø§Ø±ÛŒ Ø¯Ø§Ø¯Ù‡
df = pd.read_csv("data/eurusd_real.csv")
df['date'] = pd.to_datetime(df['date'])
df = df.sort_values("date")
data = df['close'].values.reshape(-1, 1)

# Ø¨Ø§Ø±Ú¯Ø°Ø§Ø±ÛŒ Ù†Ø±Ù…Ø§Ù„â€ŒØ³Ø§Ø² Ùˆ Ù…Ø¯Ù„
scaler = joblib.load("models/scaler.save")
model = load_model("models/lstm_eurusd.h5")

# Ù†Ø±Ù…Ø§Ù„â€ŒØ³Ø§Ø²ÛŒ Ø¯Ø§Ø¯Ù‡
scaled_data = scaler.transform(data)

# Ø§Ù†ØªØ®Ø§Ø¨ Ø¢Ø®Ø±ÛŒÙ† n Ù…Ù‚Ø¯Ø§Ø± Ø¨Ø±Ø§ÛŒ Ù¾ÛŒØ´â€ŒØ¨ÛŒÙ†ÛŒ
window_size = 10
if len(scaled_data) < window_size:
    raise ValueError("Not enough data for prediction.")

X_pred = np.array([scaled_data[-window_size:]])
predicted_scaled = model.predict(X_pred)
predicted_price = scaler.inverse_transform(predicted_scaled)[0][0]

print(f"ðŸ“ˆ Ø¢Ø®Ø±ÛŒÙ† Ù‚ÛŒÙ…Øª ÙˆØ§Ù‚Ø¹ÛŒ: {data[-1][0]:.5f}")
print(f"ðŸ¤– Ù¾ÛŒØ´â€ŒØ¨ÛŒÙ†ÛŒ Ù‚ÛŒÙ…Øª Ø¨Ø¹Ø¯ÛŒ ØªÙˆØ³Ø· LSTM: {predicted_price:.5f}")
